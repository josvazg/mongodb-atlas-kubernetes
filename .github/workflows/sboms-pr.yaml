# GitHub workflow for creating release.
# Trigger release branch should be merge into main
# TODO add e2e/smoke test for autogen configuration

name: Create SBOMs PR

on:
  push:
    tags:
      - 'v*'
  workflow_call:
    inputs:
      tag:
        type: string
        description: "Name of existing tag to release (format should be 'v*')"
        required: true
      checkout-tag:
        description: "Checkout the given tag or work on main otherwise"
        type: boolean
        required: true
        default: true
  workflow_dispatch:
    inputs:
      tag:
        type: string
        description: "Name of existing tag (or branch) to release (format should be 'v*')"
        required: true
      checkout-tag:
        description: "Checkout the given tag or work on main otherwise"
        type: boolean
        required: true
        default: true
jobs:
  sboms:
    environment: release
    name: Create SBOMs PR
    runs-on: ubuntu-latest
    env:
      TAG: ${{ inputs.tag || github.head_ref || github.ref_name }}
      CHECKOUT_TAG: ${{ inputs.checkout-tag && inputs.tag || 'main' }}
    steps:
      - name: Compute version
        id: version
        run: |
          version=$(echo "${TAG}" |awk -F'^v' '{print $2}')
          echo "version=${version}" >> "$GITHUB_OUTPUT"

      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          ref: ${{ env.CHECKOUT_TAG }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "${{ github.workspace }}/tools/makejwt/go.mod"
          cache: false

      - name: Configure Git
        run: |
          git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Create SBOMs branch
        env:
          BRANCH: version-${{ steps.version.outputs.version }}-sboms
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          OS=linux ARCH=amd64 DOCKER_SBOM_PLUGIN_VERSION=0.6.1 ./scripts/get-docker-sbom-plugin.sh
          make generate-sboms VERSION=${{ steps.version.outputs.version }}
          git checkout -b $BRANCH
          git add .
          git commit -m "Add SBOMs for version ${{ steps.version.outputs.version }}"
          git push --set-upstream origin $BRANCH

      - name: Create SBOMs PR
        uses: ./.github/actions/create-pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REVIEWERS: ${{ env.REVIEWERS }}
        with:
          REVIEWERS: ${{ env.REVIEWERS }}
